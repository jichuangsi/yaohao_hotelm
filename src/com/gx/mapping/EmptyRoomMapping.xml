<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gx.dao.EmptyRoomDao" >
  <resultMap id="BaseResultMap" type="com.gx.po.EmptyroomPo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Oct 16 19:18:30 CST 2016.
    -->
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="roomid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="roomNumber" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="checkin" jdbcType="DATE" javaType="java.sql.Date" />
      <arg column="checkout" jdbcType="DATE" javaType="java.sql.Date" />
       <arg column="stayid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="preid" jdbcType="INTEGER" javaType="java.lang.Integer" />
        <arg column="sorp" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>


  <!--   新增 -->
  <insert id="inserAll" parameterType="com.gx.po.EmptyroomPo" >
     INSERT INTO `emptyroom` (`roomid`, `roomNumber`,`checkin`,`checkout`,stayid,preid,sorp)
     values (#{roomid,jdbcType=INTEGER},#{roomNumber,jdbcType=VARCHAR}
     ,#{checkin,jdbcType=DATE},#{checkout,jdbcType=DATE},#{stayid,jdbcType=INTEGER},
      #{preid,jdbcType=INTEGER},#{sorp,jdbcType=INTEGER})
  </insert>

  <!--修改 -->
    <update id="upadtecheck" parameterType="com.gx.po.EmptyroomPo">
     UPDATE
        `emptyroom`
        SET checkin=#{checkin,jdbcType=DATE},
          `checkout`=#{checkout,jdbcType=DATE},
          stayid=#{stayid,jdbcType=INTEGER},
          preid=#{preid,jdbcType=INTEGER},
             sorp=#{sorp,jdbcType=INTEGER}
        WHERE id = #{id,jdbcType=INTEGER}
   </update>

    <select id="listAll" resultType="com.gx.po.EmptyroomPo">
        SELECT e.*,r.`roomAmount` AS roomAcount,r.`standardPriceDay` AS standardPriceDay,
      s.`supplierName` AS supplierName
        FROM `emptyroom` e
        INNER JOIN `room` r ON r.id=e.`roomid`
         INNER JOIN`supplier` s ON r.`supplierID`=s.id
        where 1=1
        <if test="roomNumber!='' and roomNumber!=null">
            AND  e.`roomNumber` like CONCAT('%',#{roomNumber,jdbcType=VARCHAR},'%')
        </if>
          AND `checkout` &lt;= #{checkin,jdbcType=DATE}
          OR `checkout` IS NULL
         AND r.`isBed`=1
          limit #{start},#{pageSize}
    </select>

<select id="listAllCount" resultType="java.lang.Integer">
     SELECT COUNT(*)
        FROM `emptyroom` e
        INNER JOIN `room` r ON r.id=e.`roomid`
         INNER JOIN`supplier` s ON r.`supplierID`=s.id
        where 1=1
    <if test="roomNumber!='' and roomNumber!=null">
            AND  e.`roomNumber` like CONCAT('%',#{roomNumber,jdbcType=VARCHAR},'%')
        </if>
        AND `checkout` &lt;= #{checkin,jdbcType=DATE}
        OR `checkout` IS NULL
        AND r.`isBed`=1
</select>


    <select id="listSelectAll" resultType="com.gx.po.EmptyroomPo">
        SELECT e.*,r.`roomAmount` AS roomAcount,r.`standardPriceDay` AS standardPriceDay,
        s.`supplierName` AS supplierName
        FROM `emptyroom` e
        INNER JOIN `room` r ON r.id=e.`roomid`
        INNER JOIN`supplier` s ON r.`supplierID`=s.id
        where 1=1
        <if test="roomNumber!='' and roomNumber!=null">
            AND  e.`roomNumber` like CONCAT('%',#{roomNumber,jdbcType=VARCHAR},'%')
        </if>
        AND r.`isBed`=1
        limit #{start},#{pageSize}
    </select>

    <select id="listSelectAllCount" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM `emptyroom` e
        INNER JOIN `room` r ON r.id=e.`roomid`
        INNER JOIN`supplier` s ON r.`supplierID`=s.id
        where 1=1
        <if test="roomNumber!='' and roomNumber!=null">
            AND  e.`roomNumber` like CONCAT('%',#{roomNumber,jdbcType=VARCHAR},'%')
        </if>
        AND r.`isBed`=1
    </select>

    <select id="selectOneAndNull" resultType="com.gx.po.EmptyroomPo">
        SELECT * FROM `emptyroom` WHERE `roomid`=#{roomid,jdbcType=INTEGER}
    </select>

    <delete id="deleteByid" parameterType="com.gx.po.EmptyroomPo">
        DELETE FROM `emptyroom`
          WHERE `roomid`=#{roomid,jdbcType=INTEGER}
          AND  stayid=#{stayid,jdbcType=INTEGER}

    </delete>


    <!--修改 -->
    <update id="upadte" parameterType="com.gx.po.EmptyroomPo">
     UPDATE
        `emptyroom`
        SET checkin=#{checkin,jdbcType=DATE},
          `checkout`=#{checkout,jdbcType=DATE},
          stayid=NULL,
          preid=NULL,
          `sorp`=0
        WHERE roomid = #{roomid,jdbcType=INTEGER}
   </update>

    <delete id="deleteRoomid" parameterType="java.lang.Integer">
         DELETE FROM `emptyroom`
          WHERE `roomid`=#{roomid,jdbcType=INTEGER}
    </delete>

    <update id="updatePre" parameterType="java.lang.Integer">
        UPDATE `emptyroom`
	SET `preid`=#{preid,jdbcType=INTEGER},`sorp`=1
	WHERE `stayid`=#{stayid,jdbcType=INTEGER}
    </update>

    <update id="updateSta" parameterType="java.lang.Integer">
        UPDATE `emptyroom`
	SET `stayid`=#{stayid,jdbcType=INTEGER},`sorp`=1
	WHERE `preid`=#{preid,jdbcType=INTEGER}
    </update>

    <delete id="deleteBypreid" parameterType="com.gx.po.EmptyroomPo">
        DELETE FROM `emptyroom`
          WHERE `roomid`=#{roomid,jdbcType=INTEGER}
          AND  preid=#{preid,jdbcType=INTEGER}

    </delete>

    <select id="listAllYZ" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM `emptyroom`
        where roomid =#{roomid,jdbcType=INTEGER}
        AND `checkout`&gt;= #{checkin,jdbcType=DATE}
    </select>
    <select id="listByRoomId" resultType="com.gx.po.EmptyroomPo">
         SELECT * FROM `emptyroom` WHERE `roomid`=#{roomid,jdbcType=INTEGER}
    </select>
    <select id="listByRoomIdAndTime" resultType="com.gx.po.EmptyroomPo">
         SELECT * FROM `emptyroom` WHERE `roomid`=#{roomid,jdbcType=INTEGER}
          AND `checkin` between #{timeOne,jdbcType=DATE} and #{timeTwo,jdbcType=DATE}
    </select>

    <select id="listsYZ" resultType="java.lang.Integer">
	 SELECT COUNT(*) FROM `emptyroom` WHERE `roomid`=#{roomid,jdbcType=INTEGER}
	AND #{checkin,jdbcType=DATE} BETWEEN `checkin` AND`checkout`
	OR  `roomid`=#{roomid,jdbcType=INTEGER} AND #{checkout,jdbcType=DATE} BETWEEN `checkin` AND `checkout`
    </select>

    <select id="selectById" resultType="com.gx.po.EmptyroomPo">
          SELECT * FROM `emptyroom` WHERE `id`=#{id,jdbcType=INTEGER}
    </select>

</mapper>